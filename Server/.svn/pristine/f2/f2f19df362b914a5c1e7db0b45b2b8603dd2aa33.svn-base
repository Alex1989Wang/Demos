// 定义

HTTP请求中必须包含的header
X-Appid: appid 100001

// 房间用户基本信息
room_user_info = { 
                    uuid:用户唯一的字符串标识, 注意此字符串仅用来在服务端标识用户，和设备token及uuid不是一回事
                    uid:用户uid，如果是登录用户则此字段有效
                    nick:用户昵称, 仅对登录用户有效
                    logo_url:用户头像地址, 仅对登录用户有效
                    sex:性别，1为男性，2为女性, 仅对登录用户有效
                    living_status:开播信息,0为未直播， 1为准备中， 2音视频直播中， 3，音频直播中， 4，视频直播中, 5, 无音视频直播, 仅对登录用户有效
                 }

// 房间基本信息
room_info =     {
                    id:房间id
                    name:房间名称(string)
                    area_id:区域ID
                    owner_uid:房主的uid
                    lock_status:是否已经上锁(0未上锁, 1上锁)
                    logo_url:房间logo的地址
                    presenter:room_user_info, 当前主持人信息, 如果不存在则为null
                    count:当前房间人数
                    queue_living_type:当前队列直播类型
                    presenter_seat_locked:当前主持位是否已锁定(0未锁定，1为锁定)
                    female_queue_locked:当前女嘉宾队列是否被锁定(0未锁定, 1为锁定)
                    male_queue_locked:当前男嘉宾队列是否被锁定(0未锁定, 1为锁定)
                 }

// 房间队列信息
room_queue_info = {
                     fowle_user_infos = [room_user_info,...]        // 女嘉宾用户列表
                     male_user_infos = [room_user_info,...]         // 男嘉宾用户列表
                  }

// 获取自己的房间信息
/user/room 
方法:             GET 
参数:             HTTP请求的header中必须包含以下字段
                 X-App-Token: 逻辑token
                 X-App-Uid: 逻辑uid 
返回:             {
                    code:错误代码
                    msg:错误消息
                    rinfo:room_info, 如果用户没有房间则该值为null
                 }

// 创建房间
/rooms 
方法:             POST
参数:             {name:房间名, area_id:区域id, logo_url:房间logo, passwd:房间密码}

                 HTTP请求的header中必须包含以下字段
                 X-App-Token: 逻辑token
                 X-App-Uid: 逻辑uid
返回:             {
                    code:错误代码
                    msg:错误消息
                    room_id:新创建的房间ID
                 }

// 获取房间信息
/rooms/:room_id 
方法:             GET
参数:             :room_id   房间ID
返回:             {
                    code:xx
                    msg:xx 
                    info:room_info
                 }

// 修改房间信息
/rooms/:room_id 
方法:             PATCH
参数:             :room_id   房间ID 
                 {name:房间名, area_id:区域id, logo_url:房间logo, passwd:房间密码}
                 以上字段可以选择传递

                 HTTP请求的header中必须包含以下字段
                 X-App-Token: 逻辑token
                 X-App-Uid: 逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 进入房间(该接口，可以重复调用，用来更新当前用户的房间的状态)
/rooms/:room_id/users
方法:             PUT 
参数:             :room_id  房间id
                 {passwd:xx, 房间密码, 如果房间加锁了需提供}
                 header中必须包含以下字段:
                 X-Device-Token: 设备token 06037d7ccab
                 如果是登陆用户则必须包含以下字段:
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                     rinfo:room_info， 当前的房间信息
                     uuid:用户在房间内的唯一字符串标识
                     kicked_remain_secs:如果code为HTTP_EC_ROOM_KICKED, 则此值为踢状态在当前房间还剩余多少秒才解禁
                 }

// 退出房间
/rooms/:room_id/users 
方法:             DELETE
参数:             :room_id房间id
                 header中必须包含以下字段:
                 X-Device-Token: 设备token 06037d7ccab
                 如果是登陆用户则必须包含以下字段:
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                      code:xx 
                      msg:xx 
                  }

// 获取当前房间的用户列表
/rooms/:room_id/users[?offset=xx&count=xx]
方法:             GET 
参数:             :room_id房间id
                 []参数可选，offset用来分页显示， 如果指定count则最多拉取count个用户， 如果都没指定则拉取全部
返回:             {
                     code:xx
                     msg:xx 
                     infos:[room_user_info, ...]
                 }

// 成为主持人
/rooms/:room_id/presenter 
方法:             POST 
参数:             :room_id房间id 
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 退出主持
/rooms/:room_id/presenter 
方法:             DELETE 
参数:             :room_id房间id 
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 踢掉主持人
/rooms/:room_id/presenter_status?type=1
方法:             PATCH 
参数:             :room_id 房间id 
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 对主持位上锁
/rooms/:room_id/presenter_status?type=2 
方法:             PATCH 
参数:             :room_id 房间id 
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 对主持位解锁
/rooms/:room_id/presenter_status?type=3
方法:             PATCH 
参数:             :room_id 房间id 
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 设置自己的直播状态
/rooms/:room_id/user_status?type=1
方法:             PATCH
参数:             :room_id 房间id 
                 {status:0为未直播， 1为准备中， 2音视频直播中， 3，音频直播中， 4，视频直播中, 5, 无音视频直播}
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 确认自己被邀请的状态
/rooms/:room_id/user_status?type=2
方法:             PATCH 
参数:             :room_id 房间id 
                 {confirm:0为拒绝，1为接受}
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                  }

// 将一个用户踢出房间
/rooms/:room_id/user_status/:uuid?type=3
方法:             PATCH 
参数:             :room_id 房间id 
                 :uuid 用户在房间内的唯一字符串标识
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 将一个用户禁言
/rooms/:room_id/user_status/:uid?type=4
方法:             PATCH 
参数:             :room_id 房间id 
                 :uid 用户id
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 将一个用户解除禁言
/rooms/:room_id/user_status/:uid?type=5
方法：             PATCH 
参数:             :room_id 房间id
                 :uid 用户id
                 HTTP请求的header中必须包含以下字段 
                 X-App-Token:逻辑token
                 X-App-Uid 逻辑uid 
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 加入房间的嘉宾队列
/rooms/:room_id/queue
方法:             POST 
参数:             :room_id 房间id 
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token 
                 X-App-Uid:逻辑uid
返回:             {
                    code:xx 
                    msg:xx 
                 }

// 获取房间队列信息
/rooms/:room_id/queue 
方法:             GET 
参数:             :room_id 房间id 
返回:             {
                    code:xx 
                    msg:xx 
                    info:room_queue_info
                 }

// 退出队列
/rooms/:room_id/queue 
方法:             DELETE 
参数:             :room_id 房间id 
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token 
                 X-App-Uid:逻辑uid
返回:             {
                    code:xx 
                    msg:xx 
                 }


// 将指定的人加入到嘉宾队列或者修改一个人在队列中的顺序
/rooms/:room_id/queue
方法:             PUT 
参数:             :room_id 房间id 
                 {uid:要加入队列的用户id, pos:指定在队列中的顺序, 从1开始, 如果没指定则默认加入到队列末尾}
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token 
                 X-App-Uid:逻辑uid
返回:             {
                    code:xx 
                    msg:xx 
                    pos:新加入用户在队列中的位置
                 }

// 将队列中指定的人移除
/rooms/:room_id/queue/:uid 
方法:             DELETE 
参数:             :room_id 房间id 
                 :uid 要移除队列的用户id
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 设置队列的首位直播类型
/rooms/:room_id/queue_status?type=1
方法:             PATCH 
参数:             :room_id 房间id 
                 {sex:xx, 队列对应的性别}
                 {living_type:1允许开启音视频，2只允许开启音频， 3，只允许开启视频, 4, 不允许开音视频, sex:1男嘉宾队列，2女嘉宾队列}
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 对队列加锁
/rooms/:room_id/queue_status?type=2
方法:             PATCH 
参数:             :room_id 房间id 
                 {sex:xx, 队列对应的性别}
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 对队列解锁
/rooms/:room_id/queue_status?type=3
方法:             PATCH 
参数:             :room_id 房间id 
                 {sex:xx, 队列对应的性别}
                 HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                     code:xx 
                     msg:xx 
                 }

// 公屏发言
/rooms/:room_id/public_screen
方法:             POST 
参数:             :room_id 房间id 
                 {msg:xx 消息文本}
                  HTTP请求的header中必须包含以下字段
                 X-App-Token:逻辑token
                 X-App-Uid:逻辑uid
返回:             {
                    code:xx 
                    msg:xx 
                 }
